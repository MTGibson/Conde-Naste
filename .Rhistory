library(haven)
PewWave25 <- read_sav("Box/PEW Guns/raw data/ATP W25.sav")
View(PewWave25)
get wd
get(wd)
getwd()
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl', 'tidyverse','haven','graphics',
'gganimate', 'gifski')
path_base <- "~/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
setwd(path_09) # Access Raw Data folder
source('~/Dropbox/UgandaFoodPlan/Dofiles/2009_agriculture_creation.R', echo=TRUE)
setwd(path_09) # Access Raw Data folder
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl', 'tidyverse','haven','graphics',
'gganimate', 'gifski','ggmap','maptools','maps')
path_base <- "~/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
#Information on agricultural production is collected at the parcel-plot-crop-level
#separately for the first cropping season (January-June 2009) and second cropping season
#(July â€“December 2009) in part A and B, respectively.
#This section also collects data on how the household used the harvested produce.
setwd(path_09) # Access Raw Data folder
genident09<- read_dta("RawData/UGA_2009/GSEC1.dta")
geo_09<- read_dta("RawData/UGA_2009/UNPS_Geovars_0910.dta")
geo_09<-subset(geo_09, select=c("HHID","lat_mod","lon_mod","COMM"))
genident09<-merge(genident09, geo_09, by.x="HHID", by.y="HHID")
rm(geo_09)
#agident09 <- read_dta("RawData/UGA_2009/AGSEC1.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 1: Staff details and survey time
aglandowned09 <- read_dta("RawData/UGA_2009/AGSEC2A.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 2: Current land holdings - first/second visit
#aglandaccess09 <- read_dta("RawData/UGA_2009/AGSEC2B.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 2B: Land that the household has access through use rights
aglandinvestLO09 <- read_dta("RawData/UGA_2009/AGSEC3A.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 3A: Agricultural and labor inputs - first visit
aglanginvestLA09 <- read_dta("RawData/UGA_2009/AGSEC3B.dta")
#This dataset provides information from "Agriculture Questionnaire", Section 3B: Agricultural and labor inputs - second visit
agsea1crops09 <- read_dta("RawData/UGA_2009/AGSEC4A.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 4A: Crops grown and types of seeds used - first visit
#Region	Primary Staples Consumed (bold refers to most frequently consumed in the region)
#Southwest	Matooke, cassava, patatoes, beans, maize, bread
#Western	Cassava, beans, patatoes, matooke, maize
#Central 1	Cassava, matooke, beans, potatoes, maize
#Central 2	Cassava, potatoes, matooke, beans, maize, bread
#East Central	Potatoes, cassava, maize, bread, beans
#Eastern	Maize, cassava, potatoes, sorghum, milet, matooke, bread
#Teso	Sorghum, millet, cassava, potatoes, beans
#Lango	Cassava, beans, maize, potatoes
#West Nile	Maize, cassava, potatoes, beans
#Acholi	Maize, cassava, beans
#Karamoja	Maize, sorghum, beans, beer residue
#Refugee Camps	Maize, cassava, beans
agsea1crops09$a4aq5<-ifelse(agsea1crops09$a4aq5=="",NA,agsea1crops09$a4aq5)
agsea1crops09$primestaple<-ifelse(agsea1crops09$a4aq5=="Maize"|agsea1crops09$a4aq5=="Cassava"|
agsea1crops09$a4aq5=="Beans"|agsea1crops09$a4aq5=="Irish potatoes"|
agsea1crops09$a4aq5=="Sweet Potatoes"|agsea1crops09$a4aq5=="Sorghum"|
agsea1crops09$a4aq5=="Finger millet",1,0)
agsea1crops09$intercropped<-ifelse(agsea1crops09$a4aq7==2,1,0)
agsea1crops09$intercropped<-factor(agsea1crops09$intercropped,
levels = c(0,1),
labels = c("Standalone","Intercropped"))
summary(agsea1crops09$intercropped)
summary(agsea1crops09$primestaple)
agsea1crops09$visit<-"first"
cropcodes<-filter(agsea1crops09,agsea1crops09$a4aq1==1)
cropcodes<-subset(cropcodes, select = c(a4aq5, a4aq6, primestaple))
cropcodes<-unique(cropcodes)
cropcodes$a4bq6<-cropcodes$a4aq6
cropcodes<-subset(cropcodes, select = c(a4aq5, a4bq6, primestaple))
agsea2crops09 <- read_dta("RawData/UGA_2009/AGSEC4B.dta")
# 	This dataset provides information from "Agriculture Questionnaire", Section 4B: Crops grown and types of seeds used - second visit
agsea2crops09 <- merge(x=agsea2crops09,y=cropcodes, by.x="a4bq6", by.y="a4bq6",all.x=TRUE)
label(agsea2crops09$a4bq2) <- "Parcel ID"
label(agsea2crops09$a4bq4) <- "Plot ID"
label(agsea2crops09$a4aq5) <- "Crop Name"
label(agsea2crops09$a4bq6) <- "Crop Code"
label(agsea2crops09$a4bq8) <- "Total area of plot planted"
label(agsea2crops09$a4bq9) <- "If intercropped what percetage of intercropped area was under this crop?"
label(agsea2crops09$a4bq11) <- "What was the total value?"
label(agsea2crops09$a4bq13) <- "What type of seed did you purchase?"
agsea2crops09$intercropped<-ifelse(agsea2crops09$a4bq7==2,1,0)
agsea2crops09$intercropped<-factor(agsea2crops09$intercropped,
levels = c(0,1),
labels = c("Standalone","Intercropped"))
agsea2crops09$visit<-"second"
summary(agsea2crops09$intercropped)
summary(agsea2crops09$primestaple)
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq1")] <- "a4aq1"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq2")] <- "a4aq2"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq3")] <- "a4aq3"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq4")] <- "a4aq4"
#names(agsea2crops09)[which(names(agsea2crops09) == "a4bq5")] <- "a4aq5"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq6")] <- "a4aq6"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq7")] <- "a4aq7"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq8")] <- "a4aq8"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq9")] <- "a4aq9"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq10")] <- "a4aq10"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq11")] <- "a4aq11"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq12")] <- "a4aq12"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq13")] <- "a4aq13"
names(agsea2crops09)[which(names(agsea2crops09) == "a4bq14")] <- "a4aq14"
agcrops09<-rbind(agsea1crops09,agsea2crops09)
rm(agsea1crops09,agsea2crops09)
names(agcrops09)[which(names(agcrops09) == "a4aq1")] <- "grew_crops"
names(agcrops09)[which(names(agcrops09) == "a4aq2")] <- "parcel_id"
names(agcrops09)[which(names(agcrops09) == "a4aq4")] <- "plot_id"
names(agcrops09)[which(names(agcrops09) == "a4aq5")] <- "crop_name"
names(agcrops09)[which(names(agcrops09) == "a4aq6")] <- "crop_code"
names(agcrops09)[which(names(agcrops09) == "a4aq7")] <- "crop_system"
names(agcrops09)[which(names(agcrops09) == "a4aq8")] <- "crop_area"
names(agcrops09)[which(names(agcrops09) == "a4aq9")] <- "crop_percinter"
names(agcrops09)[which(names(agcrops09) == "a4aq10")] <- "crop_buyseed"
names(agcrops09)[which(names(agcrops09) == "a4aq11")] <- "crop_seedvalue"
names(agcrops09)[which(names(agcrops09) == "a4aq12")] <- "crop_seedwherebuy"
names(agcrops09)[which(names(agcrops09) == "a4aq13")] <- "crop_seedtype"
names(agcrops09)[which(names(agcrops09) == "a4aq14")] <- "crop_seedtype_imp"
agcrops09$HHID2<-as.factor(agcrops09$HHID)
##Decision:
# some of the percents of crop_percenter are above 100. I believe these represent a missing decimal place; i.e., the 850 represents 85.0
agcrops09$crop_percinter<-ifelse(agcrops09$crop_percinter>100, agcrops09$crop_percinter/100, agcrops09$crop_percinter)
#plotlevel09<-agcrops09 %>%
#  group_by(HHID2, parcel_id, plot_id, visit) %>%
#  summarise(total_area=sum(crop_area, na.rm=TRUE),
#            crops_grown=n(),
#            count_prime=sum(primestaple,na.rm=TRUE),
#            avg_prct_inter=mean(crop_percinter,na.rm=TRUE))
#croplevel09<-agcrops09 %>%
#  group_by(HHID2, crop_name, crop_code, visit) %>%
#  summarise(total_area=sum(crop_area, na.rm=TRUE),
#            avg_prct_inter=mean(crop_percinter,na.rm=TRUE),
#            prime = max(primestaple, na.rm=TRUE))
agcrop1count09 <- read_dta("RawData/UGA_2009/AGSEC5A.dta")
# Content	This dataset provides information from "Agriculture Questionnaire", Section 5A: Quantification of production - first visit
agcrop1count09$visit<-"first"
agcrop2count09 <- read_dta("RawData/UGA_2009/AGSEC5B.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 5B: Quantification of production - second visit
agcrop2count09$visit<-"second"
names(agcrop1count09)
names(agcrop2count09)
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq1")] <- "a5aq1"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq3")] <- "a5aq3"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq4")] <- "a5aq4"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq5")] <- "a5aq5"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq6a")] <- "a5aq6a"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq6b")] <- "a5aq6b"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq6c")] <- "a5aq6c"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq6d")] <- "a5aq6d"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq7a")] <- "a5aq7a"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq7b")] <- "a5aq7b"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq7c")] <- "a5aq7c"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq8")] <- "a5aq8"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq9")] <- "a5aq9"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq10")] <- "a5aq10"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq11")] <- "a5aq11"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq12")] <- "a5aq12"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq13")] <- "a5aq13"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq14a")] <- "a5aq14a"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq14b")] <- "a5aq14b"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq15")] <- "a5aq15"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq16")] <- "a5aq16"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq17")] <- "a5aq17"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq18")] <- "a5aq18"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq19")] <- "a5aq19"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq20")] <- "a5aq20"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq21")] <- "a5aq21"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq22")] <- "a5aq22"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq23")] <- "a5aq23"
names(agcrop2count09)[which(names(agcrop2count09) == "a5bq24")] <- "a5aq24"
names(agcrop1count09)
names(agcrop2count09)
agcrop1count09$a5bpid2<-NA
agcrop1count09$a5bpn2<-""
agcrop1count09$a5bplid2<-NA
agcrop_qty09<-rbind(agcrop1count09,agcrop2count09)
rm(agcrop1count09,agcrop2count09)
agcrop_qty09$primestaple<-ifelse(agcrop_qty09$a5aq4=="Maize"|
agcrop_qty09$a5aq4=="Cassava"|
agcrop_qty09$a5aq4=="Beans"|
agcrop_qty09$a5aq4=="Irish potatoes"|
agcrop_qty09$a5aq4=="Sweet Potatoes"|
agcrop_qty09$a5aq4=="Sorghum"|
agcrop_qty09$a5aq4=="Finger millet",1,0)
agcrop_qty09$qty_total_kg<-agcrop_qty09$a5aq6a*agcrop_qty09$a5aq6d
#aglivestock09 <- read_dta("RawData/UGA_2009/AGSEC6A.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 6A: Livestock ownership, cattle and pack animals
#agsmallanimals09 <- read_dta("RawData/UGA_2009/AGSEC6B.dta")
#This dataset provides information from "Agriculture Questionnaire", Section 6B: Small animals
#agpoultry09 <- read_dta("RawData/UGA_2009/AGSEC6C.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 6C: Poultry and others
#aglivestockexp09 <- read_dta("RawData/UGA_2009/AGSEC7.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 7: Livestock expenditure
#aglivestockinc09 <- read_dta("RawData/UGA_2009/AGSEC8.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 8: Livestock products and income
agextension09 <- read_dta("RawData/UGA_2009/AGSEC10.dta")
#	This dataset provides information from "Agriculture Questionnaire", Section 10: Extension services
genident09<- read_dta("RawData/UGA_2009/GSEC1.dta")
path_base <- "~/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
setwd(path_09) # Access Raw Data folder
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl', 'tidyverse','haven','graphics',
'gganimate', 'gifski','ggmap','maptools','maps')
path_base <- "/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
#Information on agricultural production is collected at the parcel-plot-crop-level
#separately for the first cropping season (January-June 2009) and second cropping season
#(July â€“December 2009) in part A and B, respectively.
#This section also collects data on how the household used the harvested produce.
setwd(path_09) # Access Raw Data folder
path_base <- "~/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
#Information on agricultural production is collected at the parcel-plot-crop-level
#separately for the first cropping season (January-June 2009) and second cropping season
#(July â€“December 2009) in part A and B, respectively.
#This section also collects data on how the household used the harvested produce.
setwd(path_09) # Access Raw Data folder
getwd()
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl', 'tidyverse','haven','graphics',
'gganimate', 'gifski','ggmap','maptools','maps')
path_base <- "/Users/michaelgibson/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
#Information on agricultural production is collected at the parcel-plot-crop-level
#separately for the first cropping season (January-June 2009) and second cropping season
#(July â€“December 2009) in part A and B, respectively.
#This section also collects data on how the household used the harvested produce.
setwd(path_09) # Access Raw Data folder
genident09<- read_dta("RawData/UGA_2009/GSEC1.dta")
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl', 'tidyverse','haven','graphics',
'gganimate', 'gifski','ggmap','maptools','maps')
path_base <- "~/Users/michaelgibson/Dropbox/UgandaFoodPlan" # Use the appropriate directory
path_raw <- paste(path_base, "/RawData", sep ="")
path_09 <- paste(path_raw, "/UGA_20019", sep= "")
#Information on agricultural production is collected at the parcel-plot-crop-level
#separately for the first cropping season (January-June 2009) and second cropping season
#(July â€“December 2009) in part A and B, respectively.
#This section also collects data on how the household used the harvested produce.
setwd(path_09) # Access Raw Data folder
rm(list=ls())
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot', 'readxl',
'tidyverse','haven','graphics',
'gganimate', 'gifski','ggmap',
'maptools','maps','Hmisc')
load("~/Dropbox/UgandaFoodPlan/ModifiedData/mod_09/agriculture09.RData")
load("~/Dropbox/UgandaFoodPlan/ModifiedData/mod_10/agriculture10.RData")
load("~/Dropbox/UgandaFoodPlan/ModifiedData/mod_11/agriculture11.RData")
names(agriculture09)
names(agriculture10)
names(agriculture11)
ag09<-subset(agriculture09, select(HHID, year, visit,crop_primestaple))
ag10<-subset(agriculture10, select(HHID, year, visit,crop_primestaple))
ag11<-subset(agriculture11, select(HHID, year, visit,crop_primestaple))
ag09<-subset(agriculture09, select=c(HHID, year, visit,crop_primestaple))
ag10<-subset(agriculture10, select=c(HHID, year, visit,crop_primestaple))
ag11<-subset(agriculture11, select=c(HHID, year, visit,crop_primestaple))
rm(agriculture09,agriculture10,agriculture11)
ag0910<-rbind(ag09,ag10)
ag0910<-rbind(ag09,ag10)
ag09_11<-rbind(ag0910,ag11)
rm(ag09,ag10,ag11,ag0910)
View(ag09_11)
ag09_11$HHID2<-as.factor(ag09_11$HHID)
test<-ag09_11 %>%
group_by(HHID2, year,visit) %>%
summarise(crops_grown=n(),
count_prime=sum(crop_primestaple,na.rm=TRUE))
test$perc_prime<-test$count_prime/test$crops_grown
c<-ggplot(data=test, aes(perc_prime))
c1<-c+geom_density(kernel="gaussian")
c2<-c1+facet_grid(rows=vars(year), cols=vars(visit))
c2
View(test)
??ecdf
test$year_visit<-paste(test$year,test$visit, sep = " ", collapse = NULL)
View(test)
test$cumdist<-Ecdf(test$perc_prime, group=(test$year_visit))
View(test)
??ecdf
first09<-filter(test, test$year_visit=="2009 first")
??filtuer
??filter
first09<-filter(test,year_visit=="2009 first")
x
first09<-filter(test,year_visit=="2009 first")
second09<-filter(test,year_visit=="2009 second")
first10<-filter(test,year_visit=="2010 first")
second10<-filter(test,year_visit=="2010 second")
first11<-filter(test,year_visit=="2011 first")
second11<-filter(test,year_visit=="2011 second")
first09$fn_perc<-ecdf(first09$perc_prime)
fn_perc09f<-ecdf(first09$perc_prime)
fn_perc09f<-ecdf(first09$perc_prime)
fn_perc09s<-ecdf(second09$perc_prime)
fn_perc10f<-ecdf(first10$perc_prime)
fn_perc10s<-ecdf(second10$perc_prime)
fn_perc11f<-ecdf(first11$perc_prime)
fn_perc11s<-ecdf(second11$perc_prime)
plot(fn_perc09f, verticals=TRUE, do.points=FALSE)
plot(fn_perc09f,fn_perc09s, verticals=TRUE, do.points=FALSE)
plot(fn_perc09s, verticals=TRUE, do.points=FALSE)
plot(fn_perc09s, verticals=TRUE, do.points=FALSE)+
plot(fn_perc09f)
plot(fn_perc09f, verticals=TRUE, do.points=FALSE)
plot(fn_perc09s, verticals=TRUE, do.points=FALSE)
plot(fn_perc10f, verticals=TRUE, do.points=FALSE)
plot(fn_perc10s, verticals=TRUE, do.points=FALSE)
plot(fn_perc11f, verticals=TRUE, do.points=FALSE)
plot(fn_perc11s, verticals=TRUE, do.points=FALSE)
remotes::install_github("serrat839/mRkov")
remotes::install_github("serrat839/mRkov")
shiny::runGitHub("mRkov_shiny", username = "serrat839")
rm(list=ls())
library('dplyr')
library('tidyr')
library('rvest')
library('ggplot2')
library('tidyverse')
library("XML")
library("googlesheets4")
setwd("/Users/michaelgibson/Documents/GitHub/Conde-Naste")
gs4_browse("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
cnast<-range_read("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
View(cnast)
cnast<-cnast[3:230]
rowtitles<- cnast[c(2), ]
View(rowtitles)
rowtitles<- cnast[-c(1,2), ]
rm(list=ls())
library('dplyr')
library('tidyr')
library('rvest')
library('ggplot2')
library('tidyverse')
library("XML")
library("googlesheets4")
setwd("/Users/michaelgibson/Documents/GitHub/Conde-Naste")
#gs4_browse("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
cnast<-range_read("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
rowtitles<- cnast[c(2), ]
raw<- cnast[-c(1,2), ]
View(raw)
head(raw)
View(cnast)
names(raw)[which(names(raw) == "HERE IS A GOOGLE FORM TO ADD YOUR INFO: https://forms.gle/i6QLjLwV3fR9XCkt9")] <- "title"
names(raw)[which(names(raw) == "...2")] <- "salary"
names(raw)[which(names(raw) == "...3")] <- "race"
names(raw)[which(names(raw) == "...4")] <- "gender"
names(raw)[which(names(raw) == "...5")] <- "sexuality"
View(raw)
rm(list=ls())
library('dplyr')
library('tidyr')
library('rvest')
library('ggplot2')
library('tidyverse')
library("XML")
library("googlesheets4")
setwd("/Users/michaelgibson/Documents/GitHub/Conde-Naste")
#gs4_browse("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
cnast<-range_read("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
rowtitles<- cnast[c(2), ]
raw<- cnast[-c(1,2), ]
names(raw)[which(names(raw) == "HERE IS A GOOGLE FORM TO ADD YOUR INFO: https://forms.gle/i6QLjLwV3fR9XCkt9")] <- "title"
names(raw)[which(names(raw) == "...2")] <- "salary"
names(raw)[which(names(raw) == "...3")] <- "race"
names(raw)[which(names(raw) == "...4")] <- "gender"
names(raw)[which(names(raw) == "...5")] <- "sexuality"
names(raw)[which(names(raw) == "...6")] <- "employ_status"
names(raw)[which(names(raw) == "...7")] <- "yrs_role"
names(raw)[which(names(raw) == "...8")] <- "yrs_exp"
names(raw)[which(names(raw) == "...9")] <- "reports_ind"
names(raw)[which(names(raw) == "...10")] <- "reports_dir"
names(raw)[which(names(raw) == "...11")] <- "additonal_comp"
names(raw)[which(names(raw) == "...12")] <- "notes"
conde_nast<-as.data.frame(raw)
View(conde_nast)
View(conde_nast)
write.csv(conde_nast,'conde_nast.csv')
View(cnast)
View(conde_nast)
conde_nast<-raw<- conde_nast[,-c(13)]
write.csv(conde_nast,'conde_nast.csv')
rm(list=ls())
library('dplyr')
library('tidyr')
library('rvest')
library('ggplot2')
library('tidyverse')
library("XML")
library("googlesheets4")
setwd("/Users/michaelgibson/Documents/GitHub/Conde-Naste")
#gs4_browse("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
cnast<-range_read("https://docs.google.com/spreadsheets/u/1/d/1YqdJCJ3LmtVIzxsgOj-YhE8fGBQ3zhuEkWp-_og2HEE/htmlview?pru=AAABcsoMglg*NgqVwN1JSbezwnZ9b6PYNg")
rowtitles<- cnast[c(2), ]
raw<- cnast[-c(1,2), ]
names(raw)[which(names(raw) == "HERE IS A GOOGLE FORM TO ADD YOUR INFO: https://forms.gle/i6QLjLwV3fR9XCkt9")] <- "title"
names(raw)[which(names(raw) == "...2")] <- "salary"
names(raw)[which(names(raw) == "...3")] <- "race"
names(raw)[which(names(raw) == "...4")] <- "gender"
names(raw)[which(names(raw) == "...5")] <- "sexuality"
names(raw)[which(names(raw) == "...6")] <- "employ_status"
names(raw)[which(names(raw) == "...7")] <- "yrs_role"
names(raw)[which(names(raw) == "...8")] <- "yrs_exp"
names(raw)[which(names(raw) == "...9")] <- "reports_ind"
names(raw)[which(names(raw) == "...10")] <- "reports_dir"
names(raw)[which(names(raw) == "...11")] <- "additonal_comp"
names(raw)[which(names(raw) == "...12")] <- "notes"
conde_nast<-as.data.frame(raw)
conde_nast<- conde_nast[,-c(13)]
write.csv(conde_nast,'conde_nast.csv')
conde_nast <- apply(conde_nast,2,as.character)
write.csv(conde_nast,'conde_nast.csv')
rm(list=ls())
library('dplyr')
library('tidyr')
library('rvest')
library('ggplot2')
library('tidyverse')
library('sjmisc')
setwd("/Users/michaelgibson/Documents/GitHub/Conde-Naste")
conde_nast<-read.csv("conde_nast.csv")
conde_nast$male<-ifelse(conde_nast$gender=="Man (cisgender)"|conde_nast$gender=="Man (transgender)",1,0)
conde_nast$straight<-ifelse(conde_nast$sex_orien=="Straight",1,0)
conde_nast$cisgendered<-ifelse(conde_nast$gender=="Man (cisgender)"|conde_nast$gender=="Woman (cisgender)",1,0)
summary(conde_nast$male)
summary(conde_nast$straight)
summary(conde_nast$cisgendered)
conde_nast$male<-ifelse(conde_nast$gender=="Man (cisgender)"|conde_nast$gender=="Man (transgender)",1,0)
conde_nast$straight<-ifelse(conde_nast$sexuality=="Straight",1,0)
conde_nast$cisgendered<-ifelse(conde_nast$gender=="Man (cisgender)"|conde_nast$gender=="Woman (cisgender)",1,0)
summary(conde_nast$male)
summary(conde_nast$straight)
summary(conde_nast$cisgendered)
